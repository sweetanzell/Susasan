'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AccordionItemTitle = function (_Component) {
    _inherits(AccordionItemTitle, _Component);

    function AccordionItemTitle() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, AccordionItemTitle);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AccordionItemTitle.__proto__ || Object.getPrototypeOf(AccordionItemTitle)).call.apply(_ref, [this].concat(args))), _this), _this.handleKeyPress = _this.handleKeyPress.bind(_this), _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(AccordionItemTitle, [{
        key: 'handleKeyPress',
        value: function handleKeyPress(evt) {
            var onClick = this.props.onClick;

            if (evt.charCode === 13 || evt.charCode === 32) {
                onClick();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                id = _props.id,
                expanded = _props.expanded,
                ariaControls = _props.ariaControls,
                onClick = _props.onClick,
                children = _props.children,
                className = _props.className,
                role = _props.role,
                hideBodyClassName = _props.hideBodyClassName;

            var titleClassName = (0, _classnames2.default)(className, _defineProperty({}, hideBodyClassName, hideBodyClassName && !expanded));

            if (role === 'tab') {
                return _react2.default.createElement(
                    'div',
                    {
                        id: id,
                        'aria-selected': expanded,
                        'aria-controls': ariaControls,
                        className: titleClassName,
                        onClick: onClick,
                        role: role,
                        tabIndex: '0' // eslint-disable-line jsx-a11y/no-noninteractive-tabindex
                        , onKeyPress: this.handleKeyPress
                    },
                    children
                );
            }
            return _react2.default.createElement(
                'div',
                {
                    id: id,
                    'aria-expanded': expanded,
                    'aria-controls': ariaControls,
                    className: titleClassName,
                    onClick: onClick,
                    role: role,
                    tabIndex: '0' // eslint-disable-line jsx-a11y/no-noninteractive-tabindex
                    , onKeyPress: this.handleKeyPress
                },
                children
            );
        }
    }]);

    return AccordionItemTitle;
}(_react.Component);

AccordionItemTitle.accordionElementName = 'AccordionItemTitle';
AccordionItemTitle.defaultProps = {
    id: '',
    expanded: false,
    onClick: function onClick() {},
    ariaControls: '',
    className: 'accordion__title',
    hideBodyClassName: '',
    role: ''
};
exports.default = AccordionItemTitle;
'use strict';

var _index = require('./index');

describe('isArrayEqual', function () {
    it('exists', function () {
        expect(_index.isArraysEqualShallow).toBeDefined();
    });

    it('Arrays are equal but not same ref', function () {
        var arrayA = [3, 4, 7];
        var arrayB = [3, 4, 7];
        expect((0, _index.isArraysEqualShallow)(arrayA, arrayB)).toBeTruthy();
    });

    it('Arrays are same ref', function () {
        var arrayA = [3, 4, 7];
        var arrayB = arrayA;
        expect((0, _index.isArraysEqualShallow)(arrayA, arrayB)).toBeTruthy();
    });

    it('Params are not arrays', function () {
        var arrayA = [3, 4, 7];
        var arrayB = 'string';
        expect((0, _index.isArraysEqualShallow)(arrayA, arrayB)).toBeFalsy();

        arrayA = 5;
        arrayB = [1, 4];
        expect((0, _index.isArraysEqualShallow)(arrayA, arrayB)).toBeFalsy();
    });

    it('Params are not same length', function () {
        var arrayA = [3, 4, 7];
        var arrayB = [1];
        expect((0, _index.isArraysEqualShallow)(arrayA, arrayB)).toBeFalsy();
    });

    it('Array are different', function () {
        var arrayA = [3, 4, 7];
        var arrayB = [1, 6, 8];
        expect((0, _index.isArraysEqualShallow)(arrayA, arrayB)).toBeFalsy();
    });

    it('Array are different', function () {
        var arrayA = [3, 4, 7];
        var arrayB = [1, 6, 8];
        expect((0, _index.isArraysEqualShallow)(arrayA, arrayB)).toBeFalsy();
    });
});